{
    "name": "WA-Company Document",
    "nodes": [
        {
            "parameters": {
                "promptType": "define",
                "text": "={{ $json.finalPrompt }}\n\n\n",
                "hasOutputParser": true,
                "options": {
                    "systemMessage": "You are [Company]’s support assistant for Alumni Business Council.\n• Do NOT include any preamble such as “Based on the document you provided” or “Okay, [Name].” Just jump straight to the answer.\n* don't ever start your response with\"based on the document you provided\" , or \"According to the document\", don't mention any documents at all , also don't mention today's date unless you asked\n"
                }
            },
            "id": "d97579ec-c737-4460-9d2d-0d1ae784c371",
            "name": "AI Agent",
            "type": "@n8n/n8n-nodes-langchain.agent",
            "maxTries": 5,
            "position": [
                2112,
                672
            ],
            "retryOnFail": false,
            "typeVersion": 1.7,
            "alwaysOutputData": true,
            "waitBetweenTries": null
        },
        {
            "parameters": {
                "jsCode": "// cleanAnswer – run once per item\nlet txt = $('AI Agent').first().json.output || '';\n\n// 1. Remove bold / italic / strike markers\ntxt = txt.replace(/[*_~]+/g, '');\n\n// 2. Convert [Texto](https://url) → Texto https://url\ntxt = txt.replace(/\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s)]+)\\)/g, '$1 $2');\n\n// 3. Collapse 3+ blank lines\ntxt = txt.replace(/\\n{3,}/g, '\\n\\n').trim();\n\n// 4. Remove the unwanted source-reference preamble\ntxt = txt.replace(/^.*?based on the document you provided[,:]?\\s*/i, '');\n\nreturn [{ json: { answer: txt } }];\n"
            },
            "id": "03932e25-fb96-411f-a7ff-62fbf35e4015",
            "name": "cleanAnswer",
            "type": "n8n-nodes-base.code",
            "position": [
                2688,
                784
            ],
            "typeVersion": 2
        },
        {
            "parameters": {
                "operation": "send",
                "phoneNumberId": "760681793788329",
                "recipientPhoneNumber": "={{ $('when message received').item.json.contacts[0].wa_id }}",
                "textBody": "={{ $json.answer }}",
                "additionalFields": {}
            },
            "id": "1484a5f6-47b7-42c5-afb2-57cd8bc49931",
            "name": "Send AI Agent's Answer",
            "type": "n8n-nodes-base.whatsApp",
            "position": [
                2912,
                784
            ],
            "webhookId": "a235552d-13c7-4a5c-8c15-00eff27b9ed3",
            "typeVersion": 1,
            "credentials": {
                "whatsAppApi": {
                    "id": "FYMr10oaVlZaJUT8",
                    "name": "WhatsApp account"
                }
            }
        },
        {
            "parameters": {
                "modelName": "models/gemini-1.5-flash",
                "options": {}
            },
            "id": "c6ac68cc-d8af-48e5-b33a-ff874f9ee2a3",
            "name": "Google Gemini Chat Model",
            "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
            "position": [
                2048,
                896
            ],
            "typeVersion": 1,
            "credentials": {
                "googlePalmApi": {
                    "id": "V9L9bw2J1B9bTVfi",
                    "name": "Google Gemini(PaLM) Api account"
                }
            }
        },
        {
            "parameters": {
                "updates": [
                    "messages"
                ],
                "options": {
                    "messageStatusUpdates": [
                        "all"
                    ]
                }
            },
            "id": "b5cbbb26-ed51-4fa4-8825-356b656e900a",
            "name": "when message received",
            "type": "n8n-nodes-base.whatsAppTrigger",
            "position": [
                1232,
                784
            ],
            "webhookId": "12cadef5-ba06-4e33-8d55-d6c8d7f7ea2b",
            "typeVersion": 1,
            "credentials": {
                "whatsAppTriggerApi": {
                    "id": "MywntExp6A6QMXDh",
                    "name": "WhatsApp OAuth account"
                }
            }
        },
        {
            "parameters": {
                "instructions": "Write code to:\n• Get today’s date formatted “Month Day, Year”\n• Extract the Google Doc’s plain text by joining its body.content textRuns\n• Extract the WhatsApp message from messages[0].text.body\n• Build a field finalPrompt exactly as:\n\nvbnet\nCopy\nEdit\nToday's date is: [date]\n\n[doc text]\n\nUser's question:\n[body]\n• Return finalPrompt only.",
                "codeGeneratedForPrompt": "Write code to:\n• Get today’s date formatted “Month Day, Year”\n• Extract the Google Doc’s plain text by joining its body.content textRuns\n• Extract the WhatsApp message from messages[0].text.body\n• Build a field finalPrompt exactly as:\n\nvbnet\nCopy\nEdit\nToday's date is: [date]\n\n[doc text]\n\nUser's question:\n[body]\n• Return finalPrompt only.",
                "jsCode": "const googleDocs = $input.all().map((item) => item.json);\nconst whatsappMessages = $(\"when message received\")\n  .all()\n  .map((item) => item.json);\n\nconst date = new Date();\nconst formattedDate = `${date.getMonth() + 1} ${date.getDate()}, ${date.getFullYear()}`;\n\nconst docText = googleDocs[0].content.split(\"\\n\").join(\" \");\n\nconst body = whatsappMessages[0].messages[0].text.body;\n\nconst finalPrompt = `Today's date is: ${formattedDate}\\n\\n${docText}\\n\\nUser's question:\\n${body}`;\n\nreturn { finalPrompt };\n"
            },
            "id": "19a9b3f1-78e9-42ba-9fee-c46533e8abd6",
            "name": "Prepare Prompt",
            "type": "n8n-nodes-base.aiTransform",
            "position": [
                1888,
                784
            ],
            "typeVersion": 1
        },
        {
            "parameters": {
                "options": {}
            },
            "id": "0268234f-a8b4-48da-bc3c-fec1099b1bd0",
            "name": "Date & Time",
            "type": "n8n-nodes-base.dateTime",
            "position": [
                2464,
                784
            ],
            "typeVersion": 2
        },
        {
            "parameters": {
                "operation": "get",
                "documentURL": "=1kyYN_d4rMwkWHXkEWACnWZMxLdBhd5ZQm9zIrB-Vt4w"
            },
            "id": "f1e20b9e-4565-43f6-ad9e-31e8918a6404",
            "name": "company's knowledge",
            "type": "n8n-nodes-base.googleDocs",
            "position": [
                1552,
                784
            ],
            "typeVersion": 2,
            "credentials": {
                "googleDocsOAuth2Api": {
                    "id": "EKQKUn0jA59Yyh6N",
                    "name": "Google Docs account"
                }
            }
        },
        {
            "parameters": {
                "sessionIdType": "customKey",
                "sessionKey": "={{ $('when message received').item.json.contacts[0].wa_id }}"
            },
            "id": "54669f23-f551-445b-bbd8-fb40d238d91b",
            "name": "Simple Memory",
            "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
            "position": [
                2256,
                896
            ],
            "typeVersion": 1.3
        }
    ],
    "pinData": {},
    "connections": {
        "AI Agent": {
            "main": [
                [
                    {
                        "node": "Date & Time",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Date & Time": {
            "main": [
                [
                    {
                        "node": "cleanAnswer",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "cleanAnswer": {
            "main": [
                [
                    {
                        "node": "Send AI Agent's Answer",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Simple Memory": {
            "ai_memory": [
                [
                    {
                        "node": "AI Agent",
                        "type": "ai_memory",
                        "index": 0
                    }
                ]
            ]
        },
        "Prepare Prompt": {
            "main": [
                [
                    {
                        "node": "AI Agent",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "company's knowledge": {
            "main": [
                [
                    {
                        "node": "Prepare Prompt",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "when message received": {
            "main": [
                [
                    {
                        "node": "company's knowledge",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Google Gemini Chat Model": {
            "ai_languageModel": [
                [
                    {
                        "node": "AI Agent",
                        "type": "ai_languageModel",
                        "index": 0
                    }
                ]
            ]
        }
    },
    "active": false,
    "settings": {
        "executionOrder": "v1"
    },
    "versionId": "bd23c107-0be1-4a0c-9cb3-ec7eeace2cc4",
    "meta": {
        "templateCredsSetupCompleted": true,
        "instanceId": "ef4750618a6f2c555661758a16181cd7cc8ad4a2dbaee17d8de4d749c0e8eeb2"
    },
    "id": "1gFl6tWVP6bOTUt1",
    "tags": []
}